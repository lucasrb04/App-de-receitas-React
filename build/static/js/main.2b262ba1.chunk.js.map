{"version":3,"sources":["images/shareIcon.svg","images/blackHeartIcon.svg","images/explore.png","images/logo.png","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/whiteHeartIcon.svg","Context/RecipesContext.js","pages/Home.jsx","pages/NotFound.jsx","Service/drinkApi.js","Service/foodApi.js","components/Footer.jsx","components/Lupa.jsx","components/Header.jsx","components/CategoryMeals.jsx","components/CardMeal.jsx","components/CategoryDrinks.jsx","components/CardDrink.jsx","pages/MainPage.jsx","components/Profile.jsx","pages/Perfil.jsx","components/AreaExplorer.jsx","components/CardIngredient.jsx","pages/SearchIngredients.jsx","pages/Explore.jsx","components/FiltersButtons.jsx","components/ShareButtonPerfil.jsx","components/DoneRecipes.jsx","pages/ReceitasFeitas.jsx","components/ScreenFavoriteButton.jsx","pages/ReceitasFavoritas.jsx","components/ShareButton.jsx","components/FavoriteButton.jsx","components/RecipesInProgressMeals.jsx","components/RecipesInProgressDrink.jsx","pages/InProgress.jsx","components/MealsDetails.jsx","components/DrinksDetails.jsx","pages/IdFood.jsx","App.js","serviceWorker.js","Context/RecipesProvider.js","index.js"],"names":["module","exports","RecipesContext","createContext","Home","useContext","setLogin","login","useState","email","password","checkEmail","checkPassword","checkLogin","setCheckLogin","useEffect","length","passwordValidation","test","emailValidation","handleChange","target","name","value","className","src","Logo","alt","Form","Group","controlId","Control","type","placeholder","id","data-testid","variant","size","bg","onChange","defaultValue","to","Button","disabled","onClick","userLocalStorage","localStorage","setItem","JSON","stringify","NotFound","Component","fetchIdDrink","a","fetch","drinkDetails","json","drinks","fetchDrinkCategori","categoryDirnks","fetchAllDrinks","allDrinks","fetchIngredientesDrinks","ingrediente","ingredientes","fetchNomeDrinks","nome","nomeAPI","fetchFirstLetterDrinks","first","firstLetter","fetchTypeCategoryFilter","category","typeCategory","fetchRandomDrink","randomDrink","fetchDrinksIngredients","allIngredients","fetchIdMeals","mealsDetais","meals","fetchTypeCotegoryMeals","categoryMeals","fetchAllMeals","allMeals","fetchIngredientesMeal","fetchNomeMeal","fetchFirstLetterMeal","fetchMealsCategory","fetchRandomMeal","randomMeal","fetchMealsArea","areas","fetchMealsByArea","area","mealsByArea","fetchMealsIngredients","Footer","drinkIcon","exploreIcon","mealIcon","Lupa","setResponseApiLupaMeal","setResponseApiLupaDrink","valuesSearch","setValuesSearch","pathname","useLocation","checked","valueFiltered","alertMoreTwo","alert","htmlFor","input","search","searchRadio","then","result","catch","window","location","reload","getApi","Header","toggleSearch","setToggleSearch","history","useHistory","push","profileIcon","condicionRenderingTitle","searchIcon","condicionRenderSearchBar","CategoryMeals","setCategoryMeals","setRedirect","valor","setValor","handleClick","filter","_e","index","map","strCategory","key","CardMeal","responseApiLupaMeal","redirect","arrayMeal","idMeal","includes","strMeal","strMealThumb","Card","border","style","width","text","Img","Body","Title","CategoryDrinks","categoryDrink","setCategoryDrink","e","CardDrink","resposeApiLupaDrink","arrayDrink","idDrink","strDrink","strDrinkThumb","MainPage","Profile","user","parse","getItem","clear","Perfil","AreaExplorer","fetchedAreas","setfetchedAreas","selectedArea","setSelectedArea","console","log","selected","strArea","CardIngredient","positionInArray","ingredientArray","setIngredientsArray","response","finalArray","path","obj","CardGroup","margin","innerHTML","Object","values","setTimeout","SearchIngredients","Explorar","setIdMeal","setIdDrink","SELECT_ID","headerNFooter","explore","split","FiltersButtons","favoriteRecipesStorage","setFavoriteFilters","filterAll","filterDrinks","copy","require","ShareButtonPerfil","msgCopy","setMsgCopy","url","shareIcon","DoneRecipes","favoriteFilters","image","doneDate","tags","alcoholicOrNot","color","Text","tag","i","ReceitasFeitas","ScreenFavoriteButton","filtersRemoved","recipes","removeFavorited","blackHeartIcon","ReceitasFavoritas","areaAndCategory","ShareButton","pathRoute","FavoriteButton","props","stateDrink","stateMeals","saveRecipe","setSaveRecipe","drinkCategory","strAlcoholic","stateChangeHeart","setStateChangeHeart","favorited","saveStorage","whiteHeartIcon","RecipesInProgress","disableButton","setDisableButton","setStateMeals","ingredientsMeals","setIngredientsMeals","measureMeals","setMeasureMeals","ingredientMade","setIngreditentMade","filterDetails","keysIngredientes","keys","arrayKeysIngredients","ingredient","measures","forEach","element","filtroIngredients","word","filtroMeasure","getApiDetails","document","getElementById","classList","add","remove","filtered","numberCheck","recipesLocalStorage","ingredientSaved","save","some","strInstructions","strTags","filterLocalStorage","data","Date","day","getDate","month","getMonth","year","getUTCFullYear","done","recipesDone","RecipesInProgressDrink","ingredients","setIngredients","measure","setMeasure","setStateDrink","cocktails","InProgress","MealsDetails","drinksAll","setDrinksAll","invisibleButton","setInvisibleButton","checkButtonstate","setChekButtonState","buttonInvisible","strVideo","checkKeys","undefined","Carousel","drink","Item","interval","Caption","DrinksDetails","mealsAll","setMealsAll","IdFood","App","component","Explore","exact","Boolean","hostname","match","RecipesProvider","children","toogle","setToogle","context","Provider","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b262ba1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","module.exports = __webpack_public_path__ + \"static/media/explore.194f75f8.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.0b4d4c30.png\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","import { createContext } from 'react';\n\nconst RecipesContext = createContext();\nexport default RecipesContext;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport RecipesContext from '../Context/RecipesContext';\nimport Logo from '../images/logo.png';\n\nfunction Home() {\n  const { setLogin, login } = useContext(RecipesContext);\n  const [checkLogin, setCheckLogin] = useState({\n    email: '',\n    password: '',\n    checkEmail: false,\n    checkPassword: false,\n  });\n\n  const emailValidation = () => {\n    const { email } = checkLogin;\n    const checkEmail = (/[\\w.]+@\\w+\\.\\w{2,4}/).test(email);\n    setCheckLogin({ ...checkLogin, checkEmail });\n  };\n\n  const passwordValidation = () => {\n    const { password } = checkLogin;\n    const SIX = 6;\n\n    setCheckLogin({ ...checkLogin, checkPassword: password.length > SIX });\n  };\n\n  useEffect(() => {\n    passwordValidation();\n  }, [checkLogin.password]);\n\n  useEffect(() => {\n    emailValidation();\n  }, [checkLogin.email]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    setCheckLogin({ ...checkLogin, [name]: value });\n  };\n\n  const handleClick = () => {\n    setLogin([...login, checkLogin.email]);\n    const userLocalStorage = {\n      email: checkLogin.email,\n    };\n\n    localStorage.setItem('user', JSON.stringify(userLocalStorage));\n    localStorage.setItem('mealsToken', '1');\n    localStorage.setItem('cocktailsToken', '1');\n  };\n  const { checkPassword, checkEmail } = checkLogin;\n  return (\n    <main className=\"main-login\">\n      <section className=\"sectionForm\">\n        <img src={ Logo } alt=\"Logo\" />\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"formGroupEmail\">\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Email\"\n              id=\"input-Email\"\n              data-testid=\"email-input\"\n              name=\"email\"\n              variant=\"dark\"\n              size=\"lg\"\n              bg=\"dark\"\n              onChange={ handleChange }\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3 background_imput\" controlId=\"formGroupPassword\">\n            <Form.Control\n              defaultValue=\"#563d7c\"\n              type=\"password\"\n              className=\"input-home\"\n              placeholder=\"Password\"\n              id=\"input-Password\"\n              data-testid=\"password-input\"\n              name=\"password\"\n              variant=\"dark\"\n              size=\"lg\"\n              bg=\"dark\"\n              onChange={ handleChange }\n            />\n          </Form.Group>\n        </Form>\n        <Link to=\"/comidas\" className=\"buttonLogin\">\n          <Button\n            variant=\"outline-danger\"\n            type=\"button\"\n            disabled={ !(checkPassword && checkEmail) }\n            onClick={ handleClick }\n            data-testid=\"login-submit-btn\"\n          >\n            Entrar\n          </Button>\n        </Link>\n      </section>\n    </main>\n  );\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Not Found</h1>\n      </div>\n    );\n  }\n}\n","export const fetchIdDrink = async (id) => {\n  const drinkDetails = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n  const { drinks } = await drinkDetails.json();\n  return drinks;\n};\n\nexport const fetchDrinkCategori = async () => {\n  const categoryDirnks = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n  const { drinks } = await categoryDirnks.json();\n  return drinks;\n};\n\nexport const fetchAllDrinks = async () => {\n  const allDrinks = await fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n  const { drinks } = await allDrinks.json();\n  return drinks;\n};\n\nexport const fetchIngredientesDrinks = async (ingrediente) => {\n  const ingredientes = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingrediente}`);\n  const { drinks } = await ingredientes.json();\n  return drinks;\n};\n\nexport const fetchNomeDrinks = async (nome) => {\n  const nomeAPI = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${nome}`);\n  const { drinks } = await nomeAPI.json();\n  return drinks;\n};\n\nexport const fetchFirstLetterDrinks = async (first) => {\n  const firstLetter = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${first}`);\n  const { drinks } = await firstLetter.json();\n  return drinks;\n};\n\nexport const fetchTypeCategoryFilter = async (category) => {\n  const typeCategory = await\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n  const { drinks } = await typeCategory.json();\n  return drinks;\n};\n\nexport const fetchRandomDrink = async () => {\n  const randomDrink = await\n  fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php');\n  const { drinks } = await randomDrink.json();\n  return drinks;\n};\n\nexport const fetchDrinksIngredients = async () => {\n  const allIngredients = await\n  fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n  const { drinks } = await allIngredients.json();\n  return drinks;\n};\n","export const fetchIdMeals = async (id) => {\n  const mealsDetais = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n  const { meals } = await mealsDetais.json();\n  return meals;\n};\n\nexport const fetchTypeCotegoryMeals = async (category) => {\n  const categoryMeals = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n  const { meals } = await categoryMeals.json();\n  return meals;\n};\n\nexport const fetchAllMeals = async () => {\n  const allMeals = await fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n  const { meals } = await allMeals.json();\n  return meals;\n};\n\nexport const fetchIngredientesMeal = async (ingrediente) => {\n  const ingredientes = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingrediente}`);\n  const { meals } = await ingredientes.json();\n  return meals;\n};\n\nexport const fetchNomeMeal = async (nome) => {\n  const nomeAPI = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${nome}`);\n  const { meals } = await nomeAPI.json();\n  return meals;\n};\n\nexport const fetchFirstLetterMeal = async (first) => {\n  const firstLetter = await fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${first}`);\n  const { meals } = await firstLetter.json();\n  return meals;\n};\n\nexport const fetchMealsCategory = async () => {\n  const categoryMeals = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n  const { meals } = await categoryMeals.json();\n  return meals;\n};\n\nexport const fetchRandomMeal = async () => {\n  const randomMeal = await\n  fetch('https://www.themealdb.com/api/json/v1/1/random.php');\n  const { meals } = await randomMeal.json();\n  return meals;\n};\n\nexport const fetchMealsArea = async () => {\n  const areas = await\n  fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list');\n  const { meals } = await areas.json();\n  return meals;\n};\n\nexport const fetchMealsByArea = async (area) => {\n  const mealsByArea = await\n  fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${area}`);\n  const { meals } = await mealsByArea.json();\n  return meals;\n};\n\nexport const fetchMealsIngredients = async () => {\n  const allIngredients = await\n  fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n  const { meals } = await allIngredients.json();\n  return meals;\n};\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\n\nexport default function Footer() {\n  return (\n\n    <footer data-testid=\"footer\">\n      <div className=\"containerFooter footer\">\n        <Link to=\"/bebidas\">\n          <img\n            src={ drinkIcon }\n            alt=\"icone de bebida\"\n            data-testid=\"drinks-bottom-btn\"\n            className=\"item\"\n          />\n        </Link>\n        <Link to=\"/explorar\">\n          <img\n            src={ exploreIcon }\n            alt=\"icone de explorar\"\n            data-testid=\"explore-bottom-btn\"\n            // className=\"item\"\n          />\n        </Link>\n        <Link to=\"/comidas\">\n          <img\n            src={ mealIcon }\n            alt=\"icone de comida\"\n            data-testid=\"food-bottom-btn\"\n            className=\"item\"\n          />\n        </Link>\n      </div>\n    </footer>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport {\n  fetchIngredientesMeal,\n  fetchNomeMeal,\n  fetchFirstLetterMeal } from '../Service/foodApi';\nimport {\n  fetchIngredientesDrinks,\n  fetchFirstLetterDrinks,\n  fetchNomeDrinks } from '../Service/drinkApi';\n\nimport RecipesContext from '../Context/RecipesContext';\n\nfunction Lupa() {\n  const { setResponseApiLupaMeal,\n    setResponseApiLupaDrink } = useContext(RecipesContext);\n  const [valuesSearch, setValuesSearch] = useState({});\n  const { pathname } = useLocation();\n\n  const handleChange = ({ target: { value, name, checked, type } }) => {\n    const valueFiltered = (type === 'checkbox' ? checked : value);\n    setValuesSearch({ ...valuesSearch, [name]: valueFiltered });\n  };\n\n  const alertMoreTwo = () => alert('Sua busca deve conter somente 1 (um) caracter');\n\n  const getApi = () => {\n    const input = valuesSearch.search;\n    switch (valuesSearch.searchRadio) {\n    case 'Ingredientes':\n      if (pathname === '/bebidas') {\n        return fetchIngredientesDrinks(input)\n          .then((result) => setResponseApiLupaDrink(result))\n          .catch(() => window.location.reload());\n      }\n\n      return fetchIngredientesMeal(input)\n        .then((result) => setResponseApiLupaMeal(result))\n        .catch(() => window.location.reload());\n    case 'Nome':\n      if (pathname === '/bebidas') {\n        return fetchNomeDrinks(input)\n          .then((result) => setResponseApiLupaDrink(result))\n          .catch(() => window.location.reload());\n      }\n\n      return fetchNomeMeal(input).then((result) => setResponseApiLupaMeal(result))\n        .catch(() => window.location.reload());\n    case 'Primeira letra':\n      if (pathname === '/bebidas') {\n        return (input.length !== 1)\n          ? alertMoreTwo()\n          : fetchFirstLetterDrinks(input)\n            .then((result) => setResponseApiLupaDrink(result))\n            .catch(() => window.location.reload());\n      }\n\n      return (input.length !== 1) ? alertMoreTwo()\n        : fetchFirstLetterMeal(input).then((result) => setResponseApiLupaMeal(result));\n    default:\n      break;\n    }\n  };\n\n  return (\n    <form>\n      <label htmlFor=\"idSearch\">\n        <input\n          id=\"idSearch\"\n          name=\"search\"\n          data-testid=\"search-input\"\n          placeholder=\"Buscar receitas\"\n          onChange={ handleChange }\n        />\n      </label>\n      <label htmlFor=\"idRadio1\">\n        Ingredientes\n        <input\n          name=\"searchRadio\"\n          value=\"Ingredientes\"\n          type=\"radio\"\n          id=\"idRadio1\"\n          data-testid=\"ingredient-search-radio\"\n          onChange={ handleChange }\n        />\n      </label>\n      <label htmlFor=\"idRadio2\">\n        Nome\n        <input\n          name=\"searchRadio\"\n          value=\"Nome\"\n          type=\"radio\"\n          id=\"idRadio2\"\n          data-testid=\"name-search-radio\"\n          onChange={ handleChange }\n        />\n      </label>\n      <label htmlFor=\"idRadio3\">\n        Primeira letra\n        <input\n          name=\"searchRadio\"\n          value=\"Primeira letra\"\n          type=\"radio\"\n          id=\"idRadio3\"\n          data-testid=\"first-letter-search-radio\"\n          onChange={ handleChange }\n        />\n      </label>\n      <Button\n        variant=\"danger\"\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => getApi() }\n      >\n        Buscar\n      </Button>\n    </form>\n  );\n}\nexport default Lupa;\n","import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport Lupa from './Lupa';\n// import RecipesContext from '../Context/RecipesContext';\n\nfunction Header() {\n  const [toggleSearch, setToggleSearch] = useState(false);\n  // const { setRedirect } = useContext(RecipesContext);\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const condicionRenderingTitle = () => {\n    switch (pathname) {\n    case '/comidas':\n      return 'Comidas';\n    case '/bebidas':\n      return 'Bebidas';\n    case '/explorar':\n      return 'Explorar';\n    case '/explorar/comidas':\n      return 'Explorar Comidas';\n    case '/explorar/bebidas':\n      return 'Explorar Bebidas';\n    case '/explorar/comidas/ingredientes':\n      return 'Explorar por Ingredientes';\n    case '/explorar/bebidas/ingredientes':\n      return 'Explorar por ingredientes';\n    case '/explorar/comidas/area':\n      return 'Explorar por área';\n    case '/receitas-feitas':\n      return 'Receitas Feitas';\n    case '/receitas-favoritas':\n      return 'Receitas Favoritas';\n    case '/perfil':\n      return 'Perfil';\n    default:\n      return history.push('/notfound');\n    }\n  };\n\n  const condicionRenderSearchBar = () => {\n    if (pathname === '/comidas'\n    || pathname === '/bebidas'\n    || pathname === '/explorar/comidas/area') {\n      return (\n        <button\n          type=\"button\"\n          className=\"buttonIconsHeader\"\n          onClick={ () => setToggleSearch(!toggleSearch) }\n        >\n          <img src={ searchIcon } alt=\"ícone de buscar\" data-testid=\"search-top-btn\" />\n        </button>\n      );\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <button\n        type=\"button\"\n        className=\"buttonIconsHeader\"\n        onClick={ () => {\n          history.push('/perfil');\n        } }\n      >\n        <img\n          src={ profileIcon }\n          alt=\"ícone de perfil\"\n          data-testid=\"profile-top-btn\"\n        />\n      </button>\n      <h4 data-testid=\"page-title\" className=\"item\">{ condicionRenderingTitle() }</h4>\n      { condicionRenderSearchBar() }\n      { toggleSearch && <Lupa /> }\n    </header>\n  );\n}\n\nexport default Header;\n\n// <Navbar.Collapse className=\"justify-content-end\">\n//     <Navbar.Text>\n//       Signed in as: <a href=\"#login\">Mark Otto</a>\n//     </Navbar.Text>\n//   </Navbar.Collapse>\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { fetchMealsCategory, fetchTypeCotegoryMeals,\n  fetchAllMeals } from '../Service/foodApi';\nimport RecipesContext from '../Context/RecipesContext';\n\nexport default function CategoryMeals() {\n  const { categoryMeals, setCategoryMeals,\n    setResponseApiLupaMeal, setRedirect } = useContext(RecipesContext);\n  const [toggleSearch, setToggleSearch] = useState(false);\n  const [valor, setValor] = useState('');\n  const handleClick = ({ target: { value } }) => {\n    setValor(value);\n    setRedirect(false);\n    if (!toggleSearch || (valor !== value)) {\n      fetchTypeCotegoryMeals(value).then((result) => setResponseApiLupaMeal(result));\n      setToggleSearch(true);\n    } else {\n      fetchAllMeals().then((result) => setResponseApiLupaMeal(result));\n      setToggleSearch(false);\n    }\n  };\n  const handleAll = () => {\n    fetchAllMeals().then((result) => setResponseApiLupaMeal(result));\n  };\n\n  const getApiCategory = () => {\n    const FIVE = 5;\n    fetchMealsCategory().then((result) => setCategoryMeals(result\n      .filter((_e, index) => index < FIVE)));\n  };\n  useEffect(getApiCategory, []);\n  return (\n    <main className=\"filter-buttons\">\n      {categoryMeals.map(({ strCategory }) => (\n        <Button\n          variant=\"outline-light\"\n          type=\"button\"\n          value={ strCategory }\n          key={ strCategory }\n          data-testid={ `${strCategory}-category-filter` }\n          onClick={ handleClick }\n        >\n          {strCategory}\n        </Button>))}\n      <Button\n        variant=\"outline-danger\"\n        type=\"button\"\n        onClick={ handleAll }\n        data-testid=\"All-category-filter\"\n      >\n        All\n      </Button>\n    </main>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Redirect, Link, useLocation } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\nimport RecipesContext from '../Context/RecipesContext';\nimport CategoryMeals from './CategoryMeals';\n\nexport default function CardMeal() {\n  const { pathname } = useLocation();\n  const { responseApiLupaMeal, redirect } = useContext(RecipesContext);\n  let arrayMeal = responseApiLupaMeal;\n\n  const twelve = 12;\n  if (responseApiLupaMeal === null || !responseApiLupaMeal) {\n    return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  }\n\n  if (responseApiLupaMeal.length > twelve) {\n    arrayMeal = responseApiLupaMeal.filter((_e, index) => index < twelve);\n  }\n\n  if (responseApiLupaMeal.length === 1 && redirect) {\n    const { idMeal } = responseApiLupaMeal[0];\n    return <Redirect to={ `/comidas/${idMeal}` } />;\n  }\n\n  return (\n    <main>\n      { !pathname.includes('explorar') && <CategoryMeals />}\n      <ul className=\"ulCard\">\n        {arrayMeal.map(({ idMeal, strMeal, strMealThumb }, index) => (\n          <div className=\"main-card\" key={ idMeal }>\n            <Link to={ `/comidas/${idMeal}` } key={ index }>\n              <Card\n                border=\"dark\"\n                style={ { width: '10rem' } }\n                className=\"mb-2 shadownCard\"\n                bg=\"dark\"\n                text=\"white\"\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src={ strMealThumb }\n                  alt=\"imagem receita\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <Card.Body>\n                  <Card.Title\n                    data-testid={ `${index}-card-name` }\n                  >\n                    { strMeal }\n\n                  </Card.Title>\n\n                </Card.Body>\n              </Card>\n\n            </Link>\n          </div>\n        ))}\n      </ul>\n\n    </main>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { fetchDrinkCategori, fetchTypeCategoryFilter,\n  fetchAllDrinks } from '../Service/drinkApi';\nimport RecipesContext from '../Context/RecipesContext';\n\nexport default function CategoryDrinks() {\n  const {\n    categoryDrink,\n    setCategoryDrink,\n    setResponseApiLupaDrink, setRedirect } = useContext(RecipesContext);\n  const [toggleSearch, setToggleSearch] = useState(false);\n  const [valor, setValor] = useState('');\n  const getApiCategory = () => {\n    const FIVE = 5;\n    fetchDrinkCategori()\n      .then((result) => setCategoryDrink(result.filter((e, index) => index < FIVE)));\n  };\n  useEffect(getApiCategory, []);\n\n  const handleAll = () => {\n    fetchAllDrinks().then((result) => setResponseApiLupaDrink(result));\n  };\n\n  const handleClick = ({ target: { value } }) => {\n    setValor(value);\n    setRedirect(false);\n    if (!toggleSearch || (valor !== value)) {\n      fetchTypeCategoryFilter(value).then((result) => setResponseApiLupaDrink(result));\n      setToggleSearch(true);\n    } else {\n      fetchAllDrinks().then((result) => setResponseApiLupaDrink(result));\n      setToggleSearch(false);\n    }\n  };\n\n  return (\n    <main className=\"filter-buttons\">\n      {categoryDrink.map(({ strCategory }, index) => (\n        <Button\n          variant=\"outline-light\"\n          type=\"button\"\n          value={ strCategory }\n          key={ index }\n          data-testid={ `${strCategory}-category-filter` }\n          onClick={ handleClick }\n        >\n          {strCategory}\n        </Button>))}\n      <Button\n        variant=\"outline-danger\"\n        type=\"button\"\n        onClick={ handleAll }\n        data-testid=\"All-category-filter\"\n      >\n        All\n      </Button>\n\n    </main>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Card } from 'react-bootstrap';\n\nimport RecipesContext from '../Context/RecipesContext';\n\nimport CategoryDrinks from './CategoryDrinks';\n\nexport default function CardDrink() {\n  const { resposeApiLupaDrink, redirect } = useContext(RecipesContext);\n  const twelve = 12;\n  let arrayDrink = resposeApiLupaDrink;\n\n  if (resposeApiLupaDrink === null || !resposeApiLupaDrink) {\n    return alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n  }\n\n  if (resposeApiLupaDrink.length > twelve) {\n    arrayDrink = resposeApiLupaDrink.filter((_e, index) => index < twelve);\n  }\n  if (resposeApiLupaDrink.length === 1 && redirect) {\n    const { idDrink } = resposeApiLupaDrink[0];\n    return <Redirect to={ `/bebidas/${idDrink}` } />;\n  }\n\n  return (\n    <main>\n      <CategoryDrinks />\n      <ul className=\"ulCard\">\n        {arrayDrink.map(({ idDrink, strDrink, strDrinkThumb }, index) => (\n          <div className=\"main-card\" key={ idDrink }>\n            <Link to={ `/bebidas/${idDrink}` }>\n              <Card\n                border=\"dark\"\n                style={ { width: '10rem' } }\n                className=\"mb-2 shadownCard\"\n                bg=\"dark\"\n                text=\"white\"\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src={ strDrinkThumb }\n                  alt=\"imagem receita\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <Card.Body>\n                  <Card.Title\n                    data-testid={ `${index}-card-name` }\n                  >\n                    { strDrink }\n\n                  </Card.Title>\n\n                </Card.Body>\n              </Card>\n            </Link>\n          </div>\n        ))}\n      </ul>\n    </main>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { fetchAllDrinks } from '../Service/drinkApi';\nimport { fetchAllMeals } from '../Service/foodApi';\nimport RecipesContext from '../Context/RecipesContext';\n\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport CardMeal from '../components/CardMeal';\nimport CardDrink from '../components/CardDrink';\n\nfunction MainPage() {\n  const { pathname } = useLocation();\n\n  const { responseApiLupaMeal, setResponseApiLupaMeal,\n    resposeApiLupaDrink, setResponseApiLupaDrink,\n  } = useContext(RecipesContext);\n\n  const getApiAll = () => {\n    if (responseApiLupaMeal.length === 0 && resposeApiLupaDrink.length === 0) {\n      fetchAllDrinks().then((result) => setResponseApiLupaDrink(result));\n      fetchAllMeals().then((result) => setResponseApiLupaMeal(result));\n    }\n  };\n\n  useEffect(getApiAll, []);\n  return (\n    <>\n      <Header />\n      <div className=\"main-card\">\n        {pathname.includes('/bebidas') ? <CardDrink /> : <CardMeal /> }\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default MainPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nexport default function Profile() {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const email = user ? user.email : 'a@a.com';\n  return (\n    <div className=\"profile\">\n      <h4 className=\"headingProfile\" data-testid=\"profile-email\">{ email }</h4>\n      <Link to=\"/receitas-feitas\">\n        <Button\n          variant=\"outline-danger\"\n          size=\"lg\"\n          className=\"buttonsProfile\"\n          type=\"button\"\n          data-testid=\"profile-done-btn\"\n        >\n          Receitas Feitas\n\n        </Button>\n      </Link>\n      <Link to=\"/receitas-favoritas\">\n        <Button\n          variant=\"outline-danger\"\n          size=\"lg\"\n          className=\"buttonsProfile\"\n          type=\"button\"\n          data-testid=\"profile-favorite-btn\"\n        >\n          Receitas Favoritas\n        </Button>\n      </Link>\n      <Link to=\"/\">\n        <Button\n          variant=\"outline-danger\"\n          size=\"lg\"\n          className=\"buttonsProfile\"\n          type=\"button\"\n          data-testid=\"profile-logout-btn\"\n          onClick={ () => localStorage.clear() }\n        >\n          Sair\n\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Profile from '../components/Profile';\n\nexport default function Perfil() {\n  return (\n    <>\n      <Header />\n      <div className=\"test\">\n        <Profile />\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { fetchMealsArea, fetchMealsByArea, fetchAllMeals } from '../Service/foodApi';\nimport RecipesContext from '../Context/RecipesContext';\n\nimport CardMeal from './CardMeal';\nimport Footer from './Footer';\nimport Header from './Header';\n\nexport default function AreaExplorer() {\n  const { setResponseApiLupaMeal } = useContext(RecipesContext);\n\n  const [fetchedAreas, setfetchedAreas] = useState([]);\n  const [selectedArea, setSelectedArea] = useState('All');\n\n  const length = useHistory();\n\n  const getApiAll = () => {\n    fetchMealsArea().then((result) => setfetchedAreas(result));\n    fetchAllMeals().then((result) => setResponseApiLupaMeal(result));\n    console.log(length);\n  };\n\n  useEffect(getApiAll, []);\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n\n    setSelectedArea(value);\n    if (value === 'All') {\n      fetchAllMeals().then((result) => setResponseApiLupaMeal(result));\n    } else {\n      fetchMealsByArea(value).then((result) => setResponseApiLupaMeal(result));\n    }\n  };\n\n  return (\n    <div className=\"explore\">\n      <Header />\n\n      <label htmlFor=\"area\">\n        <div className=\"container\">\n\n          <select\n            name=\"area\"\n            id=\"area\"\n            value={ selectedArea }\n            onChange={ handleChange }\n            data-testid=\"column-filter\"\n            className=\"selectArea\"\n          >\n            <option\n              data-testid=\"All-option\"\n              value=\"All\"\n              selected\n            >\n              All\n            </option>\n            { fetchedAreas.map((area) => (\n              <option\n                key={ area.strArea }\n                data-testid={ `${area.strArea}-option` }\n                value={ area.strArea }\n              >\n                { area.strArea }\n              </option>\n            ))}\n          </select>\n        </div>\n      </label>\n\n      <CardMeal />\n      <Footer />\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, CardGroup } from 'react-bootstrap';\n\nimport { fetchMealsIngredients, fetchIngredientesMeal } from '../Service/foodApi';\nimport { fetchDrinksIngredients, fetchIngredientesDrinks } from '../Service/drinkApi';\nimport RecipesContext from '../Context/RecipesContext';\n\nexport default function CardIngredient() {\n  const twelve = 12;\n  const { location: { pathname } } = useHistory();\n  const history = useHistory();\n  let src = '';\n  let positionInArray;\n\n  const { setResponseApiLupaMeal,\n    setResponseApiLupaDrink } = useContext(RecipesContext);\n  const [ingredientArray, setIngredientsArray] = useState([]);\n\n  if (pathname.includes('comidas')) {\n    positionInArray = 1;\n    src = 'https://www.themealdb.com/images/ingredients/';\n  } else {\n    positionInArray = 0;\n    src = 'https://www.thecocktaildb.com/images/ingredients/';\n  }\n\n  const getApi = () => {\n    if (pathname.includes('comidas')) {\n      fetchMealsIngredients().then((response) => setIngredientsArray(response));\n    } else {\n      fetchDrinksIngredients().then((response) => setIngredientsArray(response));\n    }\n  };\n  useEffect(getApi, []);\n  let finalArray = ingredientArray;\n  const path = positionInArray === 0 ? '/bebidas' : '/comidas';\n\n  const fetchByingredient = (innerHTML) => {\n    const DELAY_FETCH = 300;\n    if (pathname.includes('comidas')) {\n      fetchIngredientesMeal(innerHTML)\n        .then((response) => {\n          setResponseApiLupaMeal(response);\n        });\n      setTimeout(() => history.push(path), DELAY_FETCH);\n    } else {\n      fetchIngredientesDrinks(innerHTML)\n        .then((response) => {\n          setResponseApiLupaDrink(response);\n        });\n      setTimeout(() => history.push(path), DELAY_FETCH);\n    }\n  };\n\n  if (ingredientArray.length > twelve) {\n    finalArray = ingredientArray.filter((_e, index) => index < twelve);\n  }\n  if (finalArray) {\n    return (\n      <main className=\"explore\">\n        <ul>\n          {finalArray.map((obj, index) => (\n            <CardGroup key={ index } className=\"main-card\">\n              <Card\n                border=\"dark\"\n                className=\"mb-2 shadownCard xablau\"\n                bg=\"dark\"\n                text=\"white\"\n                style={ { margin: '50px' } }\n              >\n                <button\n                  type=\"button\"\n                  key={ index }\n                  onClick={ () => fetchByingredient(Object.values(obj)[positionInArray]) }\n                  data-testid={ `${index}-ingredient-card` }\n                >\n                  <Card.Img\n                    variant=\"top\"\n                    src={ `${src}${Object.values(obj)[positionInArray]}-Small.png` }\n                    alt=\"xxxx\"\n                    data-testid={ `${index}-horizontal-image` }\n                    width=\"50px\"\n                  />\n                  <Card.Body>\n                    {/* <img\n                width=\"80px\"\n\n                alt=\"imagem do ingrediente\"\n                data-testid={ `${index}-card-img` }\n              /> */}\n                    <div data-testid={ `${index}-card-name` }>\n                      { Object.values(obj)[positionInArray] }\n                    </div>\n\n                  </Card.Body>\n                </button>\n              </Card>\n            </CardGroup>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import React from 'react';\n\nimport CardIngredient from '../components/CardIngredient';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nexport default function SearchIngredients() {\n  return (\n    <div>\n      <Header />\n      <CardIngredient />\n      <Footer />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { Button } from 'react-bootstrap';\nimport { fetchRandomMeal } from '../Service/foodApi';\nimport { fetchRandomDrink } from '../Service/drinkApi';\nimport explore from '../images/explore.png';\n\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport AreaExplorer from '../components/AreaExplorer';\nimport SearchIngredients from './SearchIngredients';\nimport NotFound from './NotFound';\n\nexport default function Explorar() {\n  const { pathname } = useLocation();\n\n  const [idMeal, setIdMeal] = useState('');\n  const [idDrink, setIdDrink] = useState('');\n\n  const getApi = () => {\n    fetchRandomMeal().then((response) => setIdMeal(response[0].idMeal));\n    fetchRandomDrink().then((response) => setIdDrink(response[0].idDrink));\n  };\n  useEffect(getApi, []);\n\n  const EXPLORE_FOOD = '/explorar/comidas';\n  const EXPLORE_DRINK = '/explorar/bebidas';\n  const SELECT_ID = pathname === EXPLORE_FOOD ? idMeal : idDrink;\n  const headerNFooter = (\n    <>\n      <Header />\n      <Footer />\n    </>);\n\n  switch (pathname) {\n  case '/explorar':\n    return (\n      <div className=\"explore\">\n        { headerNFooter }\n        <img className=\"imgExplore\" src={ explore } alt=\"explore\" />\n        <div className=\"containerButtons \">\n          <Link to={ EXPLORE_FOOD }>\n            <Button\n              variant=\"outline-danger\"\n              type=\"button\"\n              data-testid=\"explore-food\"\n            >\n              Explorar Comidas\n\n            </Button>\n          </Link>\n          <Link to={ EXPLORE_DRINK }>\n            <Button\n              variant=\"outline-danger\"\n              type=\"button\"\n              data-testid=\"explore-drinks\"\n            >\n              Explorar Bebidas\n\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  case EXPLORE_DRINK:\n  case EXPLORE_FOOD:\n    return (\n      <div className=\"explore\">\n        { headerNFooter }\n        <img className=\"imgExplore\" src={ explore } alt=\"explore\" />\n        <div className=\"containerButtons\">\n          <Link to={ `${pathname}/ingredientes` }>\n            <Button\n              variant=\"outline-danger\"\n              type=\"button\"\n              data-testid=\"explore-by-ingredient\"\n            >\n              Ingredientes\n            </Button>\n          </Link>\n          { pathname === EXPLORE_FOOD && (\n            <Link to=\"/explorar/comidas/area\">\n              <Button\n                variant=\"outline-danger\"\n                type=\"button\"\n                data-testid=\"explore-by-area\"\n              >\n                Local\n              </Button>\n            </Link>\n          )}\n          <Link\n            to={ `/${pathname.split('/')[2]}/${SELECT_ID}` }\n          >\n            <Button\n              variant=\"outline-danger\"\n              type=\"button\"\n              data-testid=\"explore-surprise\"\n            >\n              Me Surpreenda!\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  case '/explorar/bebidas/ingredientes':\n  case '/explorar/comidas/ingredientes':\n    return (\n      <SearchIngredients />\n    );\n  case '/explorar/comidas/area':\n    return (\n      <AreaExplorer />\n    );\n  case '/explorar/bebidas/area':\n    return (\n      <NotFound />\n    );\n  default:\n    break;\n  }\n}\n","import React, { useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nimport RecipesContext from '../Context/RecipesContext';\n\nexport default function FiltersButtons() {\n  const { pathname } = useLocation();\n  let favoriteRecipesStorage = [];\n  if (pathname.includes('/receitas-favoritas')) {\n    favoriteRecipesStorage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  } else {\n    favoriteRecipesStorage = JSON.parse(localStorage.getItem('doneRecipes'));\n  }\n\n  const { setFavoriteFilters } = useContext(RecipesContext);\n  const filterFood = () => {\n    const filter = favoriteRecipesStorage.filter(({ type }) => type === 'comida');\n    setFavoriteFilters(filter);\n  };\n\n  const filterDrink = () => {\n    const filterDrinks = favoriteRecipesStorage.filter(({ type }) => type === 'bebida');\n    setFavoriteFilters(filterDrinks);\n  };\n\n  const filterAll = () => {\n    const filters = favoriteRecipesStorage;\n    setFavoriteFilters(filters);\n  };\n\n  useEffect(filterAll, []);\n\n  return (\n    <div className=\"recipeFavorites\">\n      <Button\n        variant=\"outline-danger\"\n        size=\"lg\"\n        className=\"buttonsFilters\"\n        type=\"button\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ filterAll }\n      >\n        All\n\n      </Button>\n      <Button\n        variant=\"outline-danger\"\n        size=\"lg\"\n        className=\"buttonsFilters\"\n        type=\"button\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={ filterFood }\n      >\n        Food\n\n      </Button>\n      <Button\n        variant=\"outline-danger\"\n        size=\"lg\"\n        className=\"buttonsFilters\"\n        type=\"button\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ filterDrink }\n      >\n        Drinks\n\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nexport default function ShareButtonPerfil({ type, id, index }) {\n  const [msgCopy, setMsgCopy] = useState(false);\n\n  const TWO_SECONDS = 2000;\n  const shareLink = () => {\n    let url = '';\n    if (type === 'comida') {\n      url = `http://localhost:3000/comidas/${id}`;\n      copy(url);\n    } else {\n      url = `http://localhost:3000/bebidas/${id}`;\n      copy(url);\n    }\n    setMsgCopy(!msgCopy);\n    setTimeout(() => {\n      setMsgCopy(false);\n    }, TWO_SECONDS);\n  };\n  return (\n    <div>\n      <div>\n        {msgCopy ? 'Link copiado!' : ''}\n      </div>\n      <button type=\"button\" onClick={ shareLink } className=\"iconsBackground\">\n        {msgCopy ? 'Link copiado!' : <img\n          src={ shareIcon }\n          alt=\"botão de compartilhar\"\n          data-testid={ `${index}-horizontal-share-btn` }\n        />}\n      </button>\n    </div>\n  );\n}\n\nShareButtonPerfil.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  index: PropTypes.string,\n}.isRequired;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardGroup } from 'react-bootstrap';\nimport RecipesContext from '../Context/RecipesContext';\nimport ShareButtonPerfil from './ShareButtonPerfil';\n\nexport default function DoneRecipes() {\n  const { favoriteFilters } = useContext(RecipesContext);\n\n  if (favoriteFilters === null) {\n    return (\n      <p />\n    );\n  }\n  return (\n    <main className=\"divCard\">\n      {favoriteFilters.map(\n        (\n          {\n            image,\n            category,\n            name,\n            id,\n            doneDate,\n            type,\n            tags,\n            area,\n            alcoholicOrNot,\n          },\n          index,\n        ) => (\n          <CardGroup key={ id } className=\"main-card\">\n            <Card\n              border=\"dark\"\n              className=\"mb-2 shadownCard xablau\"\n              bg=\"dark\"\n              text=\"white\"\n            >\n              <Link to={ `/${type}s/${id}` }>\n                <Card.Img\n                  variant=\"top\"\n                  src={ image }\n                  alt=\"xxxx\"\n                  data-testid={ `${index}-horizontal-image` }\n                  width=\"50px\"\n                />\n              </Link>\n              <Card.Body>\n                <ShareButtonPerfil id={ id } type={ type } index={ index } />\n                <br />\n                <Link to={ `/${type}s/${id}` }>\n\n                  <Card.Title style={ { color: 'white' } } data-testid={ `${index}-horizontal-name` }>{name}</Card.Title>\n\n                </Link>\n                {area === '' ? null : (\n                  <Card.Title\n                    data-testid={ `${index}-horizontal-top-text` }\n                  >\n                    {`${area} - ${category} `}\n\n                  </Card.Title>\n                )}\n                {alcoholicOrNot === '' ? null : (\n                  <Card.Text data-testid={ `${index}-horizontal-top-text` }>\n                    {alcoholicOrNot}\n                  </Card.Text>\n                )}\n                <Card.Title data-testid={ `${index}-horizontal-top-text` }>{type}</Card.Title>\n                <Card.Text data-testid={ `${index}-horizontal-done-date` }>{doneDate}</Card.Text>\n                <div>\n                  {tags[0] === null ? (\n                    <p />\n                  ) : (\n                    tags.map((tag, i) => (\n                      <Card.Text key={ i } data-testid={ `${index}-${tag}-horizontal-tag` }>\n                        {tag}\n                      </Card.Text>\n                    ))\n                  )}\n                </div>\n              </Card.Body>\n            </Card>\n          </CardGroup>\n        ),\n      )}\n    </main>\n  );\n}\n","import React from 'react';\nimport Header from '../components/Header';\nimport FiltersButtons from '../components/FiltersButtons';\nimport DoneRecipes from '../components/DoneRecipes';\n\nfunction ReceitasFeitas() {\n  return (\n    <main>\n      <Header />\n      <FiltersButtons />\n      <DoneRecipes />\n    </main>\n  );\n}\nexport default ReceitasFeitas;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from '../Context/RecipesContext';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nexport default function ScreenFavoriteButton({ id, index }) {\n  const { favoriteFilters, setFavoriteFilters } = useContext(RecipesContext);\n\n  const removeFavorited = () => {\n    const filtersRemoved = favoriteFilters.filter((recipes) => recipes.id !== id);\n    setFavoriteFilters(filtersRemoved);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(filtersRemoved));\n    console.log(id, index);\n  };\n\n  return (\n    <button type=\"button\" onClick={ () => removeFavorited() }>\n      <img\n        src={ blackHeartIcon }\n        alt=\"imagem de favoritar\"\n        data-testid={ `${index}-horizontal-favorite-btn` }\n        className=\"iconsBackground\"\n      />\n    </button>\n  );\n}\n\nScreenFavoriteButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, CardGroup } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport FiltersButtons from '../components/FiltersButtons';\nimport RecipesContext from '../Context/RecipesContext';\nimport ShareButtonPerfil from '../components/ShareButtonPerfil';\nimport ScreenFavoriteButton from '../components/ScreenFavoriteButton';\n\nfunction ReceitasFavoritas() {\n  const { favoriteFilters } = useContext(RecipesContext);\n  const history = useHistory();\n  const areaAndCategory = (area, category) => category\n  && `${area} - ${category}`;\n\n  return (\n    <main>\n      <Header />\n      <FiltersButtons />\n      <div className=\"divCard\">\n        { favoriteFilters === null\n          ? <p />\n          : favoriteFilters.map((\n            {\n              image,\n              category,\n              name,\n              id,\n              area,\n              type,\n              alcoholicOrNot,\n            }, index,\n          ) => (\n            <CardGroup key={ id } className=\"main-card\">\n              <Card\n                border=\"dark\"\n                // style={ { width: '15rem' } }\n                className=\"mb-2 shadownCard xablau\"\n                bg=\"dark\"\n                text=\"white\"\n              >\n                <button type=\"button\" onClick={ () => history.push(`/${type}s/${id}`) }>\n                  <Card.Img\n                    variant=\"top\"\n                    src={ image }\n                    alt=\"xxxx\"\n                    data-testid={ `${index}-horizontal-image` }\n                  />\n                </button>\n                <Card.Body>\n                  <button type=\"button\" onClick={ () => history.push(`/${type}s/${id}`) } className=\"iconsBackground\">\n                    <Card.Title\n                      data-testid={ `${index}-horizontal-name` }\n                    >\n                      { name }\n                    </Card.Title>\n                  </button>\n                  <Card.Text data-testid={ `${index}-horizontal-top-text` }>\n                    { areaAndCategory(area, category) }\n                  </Card.Text>\n                  {\n                    alcoholicOrNot\n                && <Card.Text data-testid={ `${index}-horizontal-top-text` }>{ alcoholicOrNot }</Card.Text>\n                  }\n                </Card.Body>\n                <Card.Footer className=\"card-footer\">\n                  <ShareButtonPerfil type={ type } id={ id } index={ index } />\n                  <ScreenFavoriteButton\n                    id={ id }\n                    index={ index }\n                  />\n                </Card.Footer>\n              </Card>\n            </CardGroup>\n          ))}\n      </div>\n    </main>\n  );\n}\n\nexport default ReceitasFavoritas;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router';\nimport shareIcon from '../images/shareIcon.svg';\n\nconst copy = require('clipboard-copy');\n\nexport default function ShareButton({ index }) {\n  const [msgCopy, setMsgCopy] = useState(false);\n  const { pathname } = useLocation();\n\n  const TWO_SECONDS = 2000;\n  const shareLink = () => {\n    const url = `http://localhost:3000${pathname}`;\n    if (url.includes('in-progress')) {\n      copy(`${url.split('/in-progress')[0]}`);\n    } else {\n      copy(url);\n    }\n    setMsgCopy(!msgCopy);\n    setTimeout(() => {\n      setMsgCopy(false);\n    }, TWO_SECONDS);\n  };\n\n  const pathRoute = ['/receitas-favoritas', '/receitas-feitas'].includes(pathname);\n\n  return (\n    <main>\n      <button\n        type=\"button\"\n        data-testid={ pathRoute ? `${index}-horizontal-share-btn` : 'share-btn' }\n        onClick={ shareLink }\n      >\n        {msgCopy ? 'Link copiado!'\n          : <img src={ shareIcon } alt=\"botão de compartilhar\" />}\n      </button>\n    </main>\n  );\n}\n\nShareButton.propTypes = {\n  index: PropTypes.number.isRequired,\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport RecipesContext from '../Context/RecipesContext';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction FavoriteButton(props) {\n  const { pathname } = useLocation();\n  const { stateDrink, stateMeals } = useContext(RecipesContext);\n  const [saveRecipe, setSaveRecipe] = useState('');\n  const { idDrink, strDrink, strDrinkThumb, strCategory: drinkCategory,\n    strAlcoholic } = stateDrink[0];\n  const { idMeal, strMeal, strMealThumb, strCategory, strArea } = stateMeals[0];\n\n  const { stateChangeHeart, setStateChangeHeart, removeFavorited } = props;\n\n  const saveStorage = () => {\n    const type = pathname.includes('comida') ? 'comida' : 'bebida';\n    if (stateChangeHeart) {\n      if (type === 'comida') {\n        setSaveRecipe({\n          id: idMeal,\n          name: strMeal,\n          image: strMealThumb,\n          category: strCategory,\n          alcoholicOrNot: '',\n          area: strArea,\n          type,\n        });\n      } else {\n        setSaveRecipe({\n          id: idDrink,\n          name: strDrink,\n          image: strDrinkThumb,\n          category: drinkCategory,\n          alcoholicOrNot: strAlcoholic,\n          type,\n          area: '',\n        });\n      }\n    }\n  };\n\n  const changeHeart = () => {\n    setStateChangeHeart(!stateChangeHeart);\n    if (!stateChangeHeart) {\n      removeFavorited();\n    }\n  };\n\n  // const verifyHeart = () => {\n  //   const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  //   if (favorited) {\n  //     const filterLocalStorage = favorited.some((element) => element.id === id);\n  //     if (filterLocalStorage) {\n  //       setStateChangeHeart(false);\n  //     }\n  //   }\n  // };\n\n  // useEffect(verifyHeart, []);\n\n  const setInlocalStorage = () => {\n    const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (saveRecipe && !favorited) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([saveRecipe]));\n    } else if (saveRecipe) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([...favorited, saveRecipe]));\n    }\n  };\n\n  useEffect(setInlocalStorage, [saveRecipe]);\n\n  return (\n    <div className=\"favortieButton\">\n      <button type=\"button\" onClick={ () => { saveStorage(); changeHeart(); } }>\n        <img\n          src={ stateChangeHeart ? whiteHeartIcon : blackHeartIcon }\n          alt=\"imagem de favoritar\"\n          data-testid=\"favorite-btn\"\n        />\n      </button>\n    </div>\n  );\n}\n\nFavoriteButton.propTypes = {\n  setStateChangeHeart: PropTypes.func.isRequired,\n  stateChangeHeart: PropTypes.bool.isRequired,\n  removeFavorited: PropTypes.func.isRequired,\n};\n\nexport default FavoriteButton;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport RecipesContext from '../Context/RecipesContext';\nimport ShareButton from './ShareButton';\nimport FavoriteButton from './FavoriteButton';\nimport { fetchIdMeals } from '../Service/foodApi';\n\nexport default function RecipesInProgress() {\n  const [disableButton, setDisableButton] = useState(0);\n  const [stateChangeHeart, setStateChangeHeart] = useState(true);\n  const { stateMeals, setStateMeals, ingredientsMeals, setIngredientsMeals,\n    measureMeals, setMeasureMeals } = useContext(RecipesContext);\n  const [ingredientMade, setIngreditentMade] = useState([]);\n\n  const { pathname } = useLocation();\n\n  const filterDetails = () => {\n    const keysIngredientes = Object.keys(stateMeals[0]);\n    const arrayKeysIngredients = keysIngredientes.filter(\n      (e) => e.includes('strIngredient'),\n    );\n    const ingredient = [];\n    const measures = [];\n\n    const arrayKeysMeasure = keysIngredientes.filter((e) => e.includes('strMeasure'));\n    arrayKeysMeasure.forEach((element) => measures.push(stateMeals[0][element]));\n    arrayKeysIngredients.forEach((element) => ingredient.push(stateMeals[0][element]));\n    const filtroIngredients = ingredient.filter((word) => word !== '' && word !== null);\n    const filtroMeasure = measures.filter((word) => word !== ' ' && word !== null);\n    setIngredientsMeals(filtroIngredients);\n    setMeasureMeals(filtroMeasure);\n  };\n\n  const getApiDetails = () => {\n    const id = pathname.split('/')[2];\n    fetchIdMeals(id).then((result) => setStateMeals(result));\n  };\n\n  useEffect(getApiDetails, []);\n  useEffect(filterDetails, [stateMeals]);\n  const handleChange = ({ target: { checked, id } }) => {\n    if (checked) {\n      setDisableButton(disableButton + 1);\n      const buttonCheck = document.getElementById(id);\n      buttonCheck.classList.add('riscado');\n      setIngreditentMade([...ingredientMade, id]);\n    } else {\n      setDisableButton(disableButton - 1);\n      const buttonCheck = document.getElementById(id);\n      buttonCheck.classList.remove('riscado');\n      const filtered = ingredientMade.filter((e) => e !== id);\n      setIngreditentMade(filtered);\n    }\n  };\n\n  const saveLocalStorage = () => {\n    const ingredientSaved = JSON.parse(localStorage\n      .getItem('inProgressRecipes') || ('{}'));\n    const id = pathname.split('/')[2];\n\n    const save = {\n      ...ingredientSaved,\n      meals: {\n        ...ingredientSaved.meals,\n        [id]: ingredientMade,\n      },\n    };\n\n    localStorage.setItem('inProgressRecipes', JSON.stringify(save));\n  };\n  const getLocalStorage = () => {\n    const id = pathname.split('/')[2];\n    const { meals } = JSON.parse(localStorage.getItem('inProgressRecipes') || ('{}'));\n\n    const numberCheck = meals && meals[id] ? meals[id].length : 0;\n    const recipesLocalStorage = meals && meals[id] ? meals[id] : [];\n    setDisableButton(numberCheck);\n    setIngreditentMade(recipesLocalStorage);\n  };\n  useEffect(getLocalStorage, []);\n  useEffect(saveLocalStorage, [handleChange]);\n  const removeFavorited = () => {\n    const id = pathname.split('/')[2];\n    const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const filterLocalStorage = favorited.filter((element) => element.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(filterLocalStorage));\n    }\n  };\n\n  const verifyHeart = () => {\n    const id = pathname.split('/')[2];\n    const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const filterLocalStorage = favorited.some((element) => element.id === id);\n      if (filterLocalStorage) {\n        setStateChangeHeart(false);\n      }\n    }\n  };\n\n  useEffect(verifyHeart, []);\n  useEffect(getApiDetails, []);\n  useEffect(filterDetails, [stateMeals]);\n\n  const { idMeal, strArea, strMeal, strMealThumb, strCategory, strInstructions, strTags,\n  } = stateMeals[0];\n\n  const recipeDone = () => {\n    const data = new Date();\n    const day = data.getDate();\n    const month = data.getMonth();\n    const year = data.getUTCFullYear();\n    const doneDate = `${day}-${month}-${year}`;\n    const done = JSON.parse(localStorage.getItem('doneRecipes'));\n    const recipesDone = {\n      id: idMeal,\n      type: 'comida',\n      area: strArea,\n      category: strCategory,\n      alcoholicOrNot: '',\n      name: strMeal,\n      image: strMealThumb,\n      doneDate,\n      tags: [strTags],\n    };\n    console.log(done);\n    if (!done) {\n      console.log('if');\n      localStorage.setItem('doneRecipes', JSON.stringify([recipesDone]));\n    } else {\n      console.log('else');\n      localStorage.setItem('doneRecipes', JSON.stringify([...done, recipesDone]));\n    }\n  };\n\n  return (\n    <>\n      <img\n        src={ strMealThumb }\n        alt={ `Imagem ${strMeal}` }\n        width=\"100%\"\n        data-testid=\"recipe-photo\"\n      />\n      <main className=\"in_progress_recipes\">\n        <h1 data-testid=\"recipe-title\">{strMeal}</h1>\n        <div className=\"favorite-share\">\n          <ShareButton />\n          <FavoriteButton\n            stateChangeHeart={ stateChangeHeart }\n            setStateChangeHeart={ setStateChangeHeart }\n            removeFavorited={ removeFavorited }\n          />\n        </div>\n        <h5 data-testid=\"recipe-category\">{strCategory}</h5>\n        <h3>Ingredients</h3>\n        <ul id=\"ingredients\">\n          {ingredientsMeals.map((ingredient, index) => (\n            <li\n              id={ ingredient }\n              key={ index }\n              className={ ingredientMade.includes(ingredient)\n                ? 'riscado ' : 'naoRiscado ' }\n\n            >\n              {`${ingredient} - `}\n              <span data-testid={ `${index}-ingredient-step` }>\n                {`${measureMeals[index]}  `}\n                <input\n                  id={ ingredient }\n                  value={ ingredient }\n                  type=\"checkbox\"\n                  onChange={ handleChange }\n                  checked={ ingredientMade.includes(ingredient) }\n                />\n              </span>\n\n            </li>\n          ))}\n        </ul>\n        <div>\n          <h4>Mode de Preparo</h4>\n          <p data-testid=\"instructions\">{strInstructions}</p>\n        </div>\n        <div className=\"button-recipes\">\n          <Link to=\"/receitas-feitas\">\n            <Button\n              variant=\"danger\"\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              disabled={ disableButton !== ingredientsMeals.length }\n              onClick={ recipeDone }\n            >\n\n              Finalizar Receita\n\n            </Button>\n          </Link>\n        </div>\n      </main>\n    </>\n  );\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nimport RecipesContext from '../Context/RecipesContext';\nimport ShareButton from './ShareButton';\nimport FavoriteButton from './FavoriteButton';\nimport { fetchIdDrink } from '../Service/drinkApi';\n\nexport default function RecipesInProgressDrink() {\n  const [disableButton, setDisableButton] = useState(0);\n  const [ingredients, setIngredients] = useState([]);\n  const [measure, setMeasure] = useState([]);\n  const [stateChangeHeart, setStateChangeHeart] = useState(true);\n  const { stateDrink, setStateDrink } = useContext(RecipesContext);\n  const [ingredientMade, setIngreditentMade] = useState([]);\n  const { pathname } = useLocation();\n  const filterDetails = () => {\n    const keysIngredientes = Object.keys(stateDrink[0]);\n    const arrayKeysIngredients = keysIngredientes.filter(\n      (e) => e.includes('strIngredient'),\n    );\n    const ingredient = [];\n    const measures = [];\n\n    const arrayKeysMeasure = keysIngredientes.filter((e) => e.includes('strMeasure'));\n    arrayKeysMeasure.forEach((element) => measures.push(stateDrink[0][element]));\n    arrayKeysIngredients.forEach((element) => ingredient.push(stateDrink[0][element]));\n    const filtroIngredients = ingredient.filter((word) => word !== '' && word !== null);\n    const filtroMeasure = measures.filter((word) => word !== ' ' && word !== null);\n    setIngredients(filtroIngredients);\n    setMeasure(filtroMeasure);\n  };\n\n  const getApiDetails = () => {\n    const id = pathname.split('/')[2];\n    fetchIdDrink(id).then((result) => setStateDrink(result));\n  };\n\n  const handleChange = ({ target: { checked, id } }) => {\n    if (checked) {\n      setDisableButton(disableButton + 1);\n      const buttonCheck = document.getElementById(id);\n      buttonCheck.classList.add('riscado');\n      setIngreditentMade([...ingredientMade, id]);\n    } else {\n      setDisableButton(disableButton - 1);\n      const buttonCheck = document.getElementById(id);\n      buttonCheck.classList.remove('riscado');\n      const filtered = ingredientMade.filter((e) => e !== id);\n      setIngreditentMade(filtered);\n    }\n  };\n  const saveLocalStorage = () => {\n    const ingredientSaved = JSON.parse(localStorage\n      .getItem('inProgressRecipes') || ('{}'));\n    const id = pathname.split('/')[2];\n\n    const save = {\n      ...ingredientSaved,\n      cocktails: {\n        ...ingredientSaved.cocktails,\n        [id]: ingredientMade,\n      },\n    };\n\n    localStorage.setItem('inProgressRecipes', JSON.stringify(save));\n  };\n  const getLocalStorage = () => {\n    const id = pathname.split('/')[2];\n    const { cocktails } = JSON.parse(localStorage.getItem('inProgressRecipes') || ('{}'));\n\n    const numberCheck = cocktails && cocktails[id] ? cocktails[id].length : 0;\n    const recipesLocalStorage = cocktails && cocktails[id] ? cocktails[id] : [];\n    setDisableButton(numberCheck);\n    setIngreditentMade(recipesLocalStorage);\n  };\n  useEffect(getLocalStorage, []);\n  useEffect(saveLocalStorage, [handleChange]);\n\n  const removeFavorited = () => {\n    const id = pathname.split('/')[2];\n    const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const filterLocalStorage = favorited.filter((element) => element.id !== id);\n      localStorage.setItem('favoriteRecipes', JSON.stringify(filterLocalStorage));\n    }\n  };\n  const verifyHeart = () => {\n    const id = pathname.split('/')[2];\n    const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const filterLocalStorage = favorited.some((element) => element.id === id);\n      if (filterLocalStorage) {\n        setStateChangeHeart(false);\n      }\n    }\n  };\n\n  useEffect(verifyHeart, []);\n  useEffect(getApiDetails, []);\n  useEffect(filterDetails, [stateDrink]);\n\n  const { idDrink, strAlcoholic, strDrink, strDrinkThumb,\n    strCategory, strInstructions, strTags } = stateDrink[0];\n  const recipeDone = () => {\n    const data = new Date();\n    const day = data.getDate();\n    const month = data.getMonth();\n    const year = data.getUTCFullYear();\n    const doneDate = `${day}-${month}-${year}`;\n    const done = JSON.parse(localStorage.getItem('doneRecipes'));\n    console.log(strTags);\n    const recipesDone = {\n      id: idDrink,\n      type: 'bebida',\n      area: '',\n      category: strCategory,\n      alcoholicOrNot: strAlcoholic,\n      name: strDrink,\n      image: strDrinkThumb,\n      doneDate,\n      tags: [strTags],\n    };\n    console.log(done);\n    if (!done) {\n      console.log('if');\n      localStorage.setItem('doneRecipes', JSON.stringify([recipesDone]));\n    } else {\n      console.log('else');\n      localStorage.setItem('doneRecipes', JSON.stringify([...done, recipesDone]));\n    }\n  };\n  return (\n    <>\n      <img\n        src={ strDrinkThumb }\n        alt={ `Imagem ${strDrink}` }\n        width=\"100%\"\n        data-testid=\"recipe-photo\"\n      />\n      <main className=\"in_progress_recipes\">\n        <h1 data-testid=\"recipe-title\">{strDrink}</h1>\n        <div className=\"favorite-share\">\n          <ShareButton />\n          <FavoriteButton\n            stateChangeHeart={ stateChangeHeart }\n            setStateChangeHeart={ setStateChangeHeart }\n            removeFavorited={ removeFavorited }\n          />\n        </div>\n        <h5 data-testid=\"recipe-category\">{strCategory}</h5>\n        <h3>Ingredients</h3>\n        <ul id=\"ingrediesnts\">\n          {ingredients.map((ingredient, index) => (\n            <li\n              id={ { ingredient } }\n              key={ index }\n              value={ index }\n              className={ ingredientMade.includes(ingredient) ? 'riscado' : 'naoRiscado' }\n\n            >\n              {`${ingredient} - `}\n              <span data-testid={ `${index}-ingredient-step` }>\n                {`${measure[index] ? measure[index] : ''}  `}\n                <input\n                  id={ ingredient }\n                  value={ ingredient }\n                  type=\"checkbox\"\n                  onChange={ handleChange }\n                  checked={ ingredientMade.includes(ingredient) }\n                />\n              </span>\n\n            </li>\n          ))}\n        </ul>\n        <div>\n          <h4>Mode de Preparo</h4>\n          <p data-testid=\"instructions\">{strInstructions}</p>\n        </div>\n        <div className=\"button-recipes\">\n          <Link to=\"/receitas-feitas\">\n            <Button\n              variant=\"danger\"\n              type=\"button\"\n              data-testid=\"finish-recipe-btn\"\n              disabled={ disableButton !== ingredients.length }\n              onClick={ recipeDone }\n            >\n\n              Finalizar Receita\n\n            </Button>\n          </Link>\n        </div>\n      </main>\n    </>\n  );\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport RecipesInProgressMeals from '../components/RecipesInProgressMeals';\nimport RecipesInProgressDrink from '../components/RecipesInProgressDrink';\n\nexport default function InProgress() {\n  const { pathname } = useLocation();\n  return (\n    <main>\n      {pathname.includes('/comidas')\n        ? <RecipesInProgressMeals /> : <RecipesInProgressDrink />}\n    </main>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { Carousel, Button } from 'react-bootstrap';\nimport { fetchIdMeals } from '../Service/foodApi';\nimport { fetchAllDrinks } from '../Service/drinkApi';\n\nimport ShareButton from './ShareButton';\nimport RecipesContext from '../Context/RecipesContext';\nimport FavoriteButton from './FavoriteButton';\n\nexport default function MealsDetails() {\n  const {\n    stateMeals,\n    setStateMeals,\n    ingredientsMeals,\n    setIngredientsMeals,\n    measureMeals,\n    setMeasureMeals,\n  } = useContext(RecipesContext);\n  const { pathname } = useLocation();\n  const [drinksAll, setDrinksAll] = useState([{ strDrink: '' }]);\n  const [stateChangeHeart, setStateChangeHeart] = useState(true);\n  const [invisibleButton, setInvisibleButton] = useState(false);\n  const [checkButtonstate, setChekButtonState] = useState(false);\n\n  const filterDetails = () => {\n    const keysIngredientes = Object.keys(stateMeals[0]);\n    const arrayKeysIngredients = keysIngredientes\n      .filter((e) => e.includes('strIngredient'));\n    const ingredient = [];\n    const measures = [];\n\n    const arrayKeysMeasure = keysIngredientes.filter((e) => e.includes('strMeasure'));\n    arrayKeysMeasure.forEach((element) => measures.push(stateMeals[0][element]));\n    arrayKeysIngredients.forEach((element) => ingredient.push(stateMeals[0][element]));\n    const filtroIngredients = ingredient.filter((word) => word !== '');\n    const filtroMeasure = measures.filter((word) => word !== ' ');\n    setIngredientsMeals(filtroIngredients);\n    setMeasureMeals(filtroMeasure);\n  };\n\n  const getApiDetails = () => {\n    const SIX = 6;\n    const id = pathname.split('/')[2];\n    fetchIdMeals(id).then((result) => setStateMeals(result));\n    fetchAllDrinks().then((result) => setDrinksAll(result.filter((_e, i) => i < SIX)));\n  };\n\n  useEffect(getApiDetails, []);\n  useEffect(filterDetails, [stateMeals]);\n\n  const id = pathname.split('/')[2];\n  const removeFavorited = () => {\n    const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const filterLocalStorage = favorited.filter(\n        (element) => element.id !== id,\n      );\n      localStorage.setItem(\n        'favoriteRecipes',\n        JSON.stringify(filterLocalStorage),\n      );\n    }\n  };\n\n  const verifyHeart = () => {\n    const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const filterLocalStorage = favorited.some((element) => element.id === id);\n      if (filterLocalStorage) {\n        setStateChangeHeart(false);\n      }\n    }\n  };\n\n  useEffect(verifyHeart, []);\n\n  const checkButton = () => {\n    const recipeFinish = JSON.parse(localStorage.getItem('doneRecipes') || ('[]'));\n    const buttonInvisible = recipeFinish.some((element) => element.id === id);\n    setInvisibleButton(buttonInvisible);\n  };\n  useEffect(checkButton, []);\n\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strVideo,\n    idMeal,\n  } = stateMeals[0];\n\n  const changeButton = () => {\n    const url = pathname.split('/')[2];\n    const { meals } = JSON.parse(localStorage.getItem('inProgressRecipes') || ('{}'));\n    const keysCocktais = meals ? Object.keys(meals) : [];\n    const checkKeys = keysCocktais.includes(url);\n    setChekButtonState(checkKeys);\n  };\n  useEffect(changeButton, []);\n\n  return (\n    <>\n      <img\n        src={ strMealThumb }\n        alt=\"foto da comida\"\n        data-testid=\"recipe-photo\"\n        width=\"100%\"\n      />\n      <div className=\"in_progress_recipes\">\n        <h1 data-testid=\"recipe-title\">{strMeal}</h1>\n        <div className=\"favorite-share\">\n          <ShareButton />\n          <FavoriteButton\n            stateChangeHeart={ stateChangeHeart }\n            setStateChangeHeart={ setStateChangeHeart }\n            removeFavorited={ removeFavorited }\n          />\n        </div>\n        <h5 data-testid=\"recipe-category\">{strCategory}</h5>\n        <h3>Ingredients</h3>\n        <ul>\n          {ingredientsMeals.map((ingredient, index) => (\n            <li data-testid={ `${index}-ingredient-name-and-measure` } key={ index }>\n              {`${ingredient} ${\n                measureMeals[index] !== undefined ? `-${measureMeals[index]}` : ''\n              }`}\n            </li>\n          ))}\n        </ul>\n        <h3>Instructions</h3>\n        <p data-testid=\"instructions\" className=\"instrucoesP\">\n          {strInstructions}\n          {' '}\n\n        </p>\n        <Carousel>\n          {drinksAll.map((drink, index) => (\n            <Carousel.Item\n              interval={ 850 }\n              key={ index }\n              data-testid={ `${index}-recomendation-card` }\n            >\n              <img\n                className=\"w-100\"\n                src={ drink.strDrinkThumb }\n                alt=\"slide\"\n              />\n              <Carousel.Caption data-testid={ `${index}-recomendation-title` }>\n                <h3>{drink.strDrink}</h3>\n              </Carousel.Caption>\n            </Carousel.Item>\n          ))}\n        </Carousel>\n        <div className=\"button-recipes\">\n          <Link to={ `/comidas/${idMeal}/in-progress` }>\n            <Button\n              variant=\"danger\"\n              type=\"button\"\n              data-testid=\"start-recipe-btn\"\n              className={ invisibleButton ? 'iniciarReceitaInvisible' : 'iniciarReceita' }\n            >\n              {checkButtonstate ? 'Continuar Receita' : 'Iniciar Receita' }\n            </Button>\n          </Link>\n        </div>\n\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Carousel, Button } from 'react-bootstrap';\nimport { useLocation, Link } from 'react-router-dom';\nimport { fetchIdDrink } from '../Service/drinkApi';\nimport { fetchAllMeals } from '../Service/foodApi';\n\nimport ShareButton from './ShareButton';\nimport RecipesContext from '../Context/RecipesContext';\nimport FavoriteButton from './FavoriteButton';\n\nexport default function DrinksDetails() {\n  const [mealsAll, setMealsAll] = useState([]);\n  const [ingredients, setIngredients] = useState([]);\n  const [measure, setMeasure] = useState([]);\n  const { stateDrink, setStateDrink } = useContext(RecipesContext);\n  const { pathname } = useLocation();\n  const [invisibleButton, setInvisibleButton] = useState(false);\n  const [stateChangeHeart, setStateChangeHeart] = useState(true);\n  const [checkButtonstate, setChekButtonState] = useState(false);\n\n  const filterDetails = () => {\n    const keysIngredientes = Object.keys(stateDrink[0]);\n    const arrayKeysIngredients = keysIngredientes\n      .filter((e) => e.includes('strIngredient'));\n    const ingredient = [];\n    const measures = [];\n    const arrayKeysMeasure = keysIngredientes.filter((e) => e.includes('strMeasure'));\n    arrayKeysMeasure.forEach((element) => measures.push(stateDrink[0][element]));\n    arrayKeysIngredients.forEach((element) => ingredient.push(stateDrink[0][element]));\n    const filtroIngredients = ingredient.filter((word) => word !== null);\n    const filtroMeasure = measures.filter((word) => word !== null);\n    setIngredients(filtroIngredients);\n    setMeasure(filtroMeasure);\n  };\n\n  const id = pathname.split('/')[2];\n  const removeFavorited = () => {\n    const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const filterLocalStorage = favorited.filter(\n        (element) => element.id !== id,\n      );\n      localStorage.setItem(\n        'favoriteRecipes',\n        JSON.stringify(filterLocalStorage),\n      );\n    }\n  };\n\n  const verifyHeart = () => {\n    const favorited = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorited) {\n      const filterLocalStorage = favorited.some((element) => element.id === id);\n      if (filterLocalStorage) {\n        setStateChangeHeart(false);\n      }\n    }\n  };\n\n  useEffect(verifyHeart, []);\n\n  const getApiDetails = () => {\n    const SIX = 6;\n    fetchIdDrink(id).then((result) => setStateDrink(result));\n    fetchAllMeals().then((result) => setMealsAll(result.filter((_e, i) => i < SIX)));\n  };\n  useEffect(getApiDetails, []);\n  useEffect(filterDetails, [stateDrink]);\n  const { strDrinkThumb, strDrink, strInstructions,\n    strAlcoholic, idDrink } = stateDrink[0];\n\n  const checkButton = () => {\n    const recipeFinish = JSON.parse(localStorage.getItem('doneRecipes') || ('[]'));\n    const buttonInvisible = recipeFinish.some((element) => element.id === id);\n    setInvisibleButton(buttonInvisible);\n  };\n  useEffect(checkButton, []);\n  const changeButton = () => {\n    const url = pathname.split('/')[2];\n    const { cocktails } = JSON.parse(localStorage.getItem('inProgressRecipes') || ('{}'));\n    const keysCocktais = cocktails ? Object.keys(cocktails) : [];\n    const checkKeys = keysCocktais.includes(url);\n    setChekButtonState(checkKeys);\n  };\n  useEffect(changeButton, []);\n  return (\n    <>\n      <img\n        src={ strDrinkThumb }\n        alt=\"imagem da bebida\"\n        data-testid=\"recipe-photo\"\n        width=\"100%\"\n      />\n      <div className=\"in_progress_recipes\">\n        <h1 data-testid=\"recipe-title\">{strDrink}</h1>\n        <div className=\"favorite-share\">\n          <ShareButton />\n          <FavoriteButton\n            stateChangeHeart={ stateChangeHeart }\n            setStateChangeHeart={ setStateChangeHeart }\n            removeFavorited={ removeFavorited }\n          />\n        </div>\n        <h5 data-testid=\"recipe-category\">{strAlcoholic}</h5>\n        <h3>Ingredientes</h3>\n        <ul>\n          {ingredients.map((ingredient, index) => (\n            <li\n              data-testid={ `${index}-ingredient-name-and-measure` }\n              key={ ingredient }\n            >\n              {`${ingredient} ${\n                measure[index] !== undefined ? `-${measure[index]}` : ''\n              }`}\n            </li>\n          ))}\n        </ul>\n        <h3>Instruções</h3>\n        <p data-testid=\"instructions\" className=\"instrucoesP\">{strInstructions}</p>\n        <Carousel>\n          {mealsAll.map((meals, index) => (\n            <Carousel.Item\n              interval={ 850 }\n              key={ index }\n              data-testid={ `${index}-recomendation-card` }\n            >\n              <img\n                className=\"w-100\"\n                src={ meals.strMealThumb }\n                alt=\"slide\"\n              />\n              <Carousel.Caption data-testid={ `${index}-recomendation-title` }>\n                <h3>{meals.strMeal}</h3>\n              </Carousel.Caption>\n            </Carousel.Item>\n          ))}\n        </Carousel>\n        <div className=\"button-recipes\">\n          <Link to={ `/bebidas/${idDrink}/in-progress` }>\n            <Button\n              type=\"button\"\n              data-testid=\"start-recipe-btn\"\n              variant=\"danger\"\n              className={ invisibleButton\n                ? 'iniciarReceitaInvisible' : 'iniciarReceita' }\n            >\n              {checkButtonstate ? 'Continuar Receita' : 'Iniciar Receita' }\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport MealsDetails from '../components/MealsDetails';\nimport DrinksDetails from '../components/DrinksDetails';\n\nexport default function IdFood() {\n  const { pathname } = useLocation();\n  return (\n    <main>\n      {pathname.includes('/comidas') ? <MealsDetails /> : <DrinksDetails />}\n    </main>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Home from './pages/Home';\nimport NotFound from './pages/NotFound';\nimport MainPage from './pages/MainPage';\nimport Perfil from './pages/Perfil';\nimport Explore from './pages/Explore';\nimport ReceitasFeitas from './pages/ReceitasFeitas';\nimport ReceitasFavoritas from './pages/ReceitasFavoritas';\n// import AreaExplorer from './pages/AreaExplorer';\n// import SearchIngredients from './pages/SearchIngredients';\nimport InProgress from './pages/InProgress';\n// import ExplorarMenu from './pages/ExplorarMenu';\nimport IdFood from './pages/IdFood';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/explorar/comidas/area\" component={ Explore } />\n      <Route path=\"/explorar/bebidas/ingredientes\" component={ Explore } />\n      <Route path=\"/explorar/comidas/ingredientes\" component={ Explore } />\n      <Route path=\"/comidas/:id/in-progress\" component={ InProgress } />\n      <Route path=\"/bebidas/:id/in-progress\" component={ InProgress } />\n      <Route path=\"/explorar/comidas\" component={ Explore } />\n      <Route path=\"/explorar/bebidas\" component={ Explore } />\n      <Route path=\"/comidas/:id\" component={ IdFood } />\n      <Route path=\"/bebidas/:id\" component={ IdFood } />\n      <Route path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n      <Route path=\"/receitas-favoritas\" component={ ReceitasFavoritas } />\n      <Route path=\"/explorar\" component={ Explore } />\n      <Route path=\"/perfil\" component={ Perfil } />\n      <Route path=\"/comidas\" component={ MainPage } />\n      <Route path=\"/bebidas\" component={ MainPage } />\n      <Route exact path=\"/\" component={ Home } />\n      {/* <Route component={ NotFound } /> */}\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport RecipesContext from './RecipesContext';\n\nfunction RecipesProvider({ children }) {\n  const [login, setLogin] = useState([]);\n  const [responseApiLupaMeal, setResponseApiLupaMeal] = useState([]);\n  const [resposeApiLupaDrink, setResponseApiLupaDrink] = useState([]);\n  const [categoryMeals, setCategoryMeals] = useState([]);\n  const [categoryDrink, setCategoryDrink] = useState([]);\n  const [redirect, setRedirect] = useState(true);\n  const [toogle, setToogle] = useState(false);\n  const [stateDrink, setStateDrink] = useState([{}]);\n  const [stateMeals, setStateMeals] = useState([{}]);\n  const [favoriteFilters, setFavoriteFilters] = useState([]);\n  const [ingredientsMeals, setIngredientsMeals] = useState([]);\n  const [measureMeals, setMeasureMeals] = useState([]);\n\n  const context = {\n    login,\n    setLogin,\n    responseApiLupaMeal,\n    setResponseApiLupaMeal,\n    resposeApiLupaDrink,\n    setResponseApiLupaDrink,\n    categoryMeals,\n    setCategoryMeals,\n    categoryDrink,\n    setCategoryDrink,\n    redirect,\n    setRedirect,\n    toogle,\n    setToogle,\n    stateDrink,\n    setStateDrink,\n    stateMeals,\n    setStateMeals,\n    favoriteFilters,\n    setFavoriteFilters,\n    measureMeals,\n    setMeasureMeals,\n    ingredientsMeals,\n    setIngredientsMeals,\n  };\n  return (\n    <RecipesContext.Provider value={ context }>\n      {children}\n    </RecipesContext.Provider>\n\n  );\n}\n\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default RecipesProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RecipeProvider from './Context/RecipesProvider';\n\nReactDOM.render(\n  <BrowserRouter>\n    <RecipeProvider>\n      <App />\n    </RecipeProvider>\n  </BrowserRouter>, document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}